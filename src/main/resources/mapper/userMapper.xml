<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.hhfarcry.springbootmybatis.example.dao.UserDao">
    <sql id="allcolumn">
        id
        ,is_deleted
        
        ,comment
        ,create_user_uuid
        ,create_time
        ,update_user_uuid
        ,update_time
        ,user_name
        ,password
        ,phone
    </sql>

    <sql id="allcolumn2">
        #{id}
        ,#{isDeleted}
        ,#{comment}
        ,#{createUserId}
        ,#{createTime}
        ,#{updateUserId}
        ,#{updateTime}
        ,#{userName}
        ,#{password}
        ,#{phone}
    </sql>

    <insert id="insertOrUpdateByEntity" parameterType="cn.hhfarcry.springbootmybatis.example.entity.UserEntity">
        insert into t_user
        (id
        ,is_deleted
        
        ,comment
        ,create_user_uuid
        ,create_time
        ,user_name
        ,password
        ,phone)
        values
        (#{id}
        ,#{isDeleted}
        ,#{comment}
        ,#{createUserId}
        ,#{createTime}
        ,#{userName}
        ,#{password}
        ,#{phone})
        on duplicate key update
        update_user_uuid = #{updateUserId}
        ,update_time = current_timestamp
        ,user_name = #{userName}
        ,password = #{password}
        ,phone = #{phone}
    </insert>


    <update id="updateByEntity" parameterType="cn.hhfarcry.springbootmybatis.example.entity.UserEntity">
        update t_user
        <trim prefix="set" suffixOverrides=",">
            <if test=" updateUserId != null">
                update_user_uuid = #{updateUserId},
            </if>
            <if test=" updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test=" userName != null and userName != '' ">
                user_name = #{userName},
            </if>
            <if test=" phone != null and phone != '' ">
                phone = #{phone},
            </if>
            <if test=" password != null and password != '' ">
                password = #{password},
            </if>
        </trim>
        where id = #{id}
    </update>

    <select id="selectByEntity" resultType="cn.hhfarcry.springbootmybatis.example.entity.UserEntity" parameterType="map">
        select <include refid="allcolumn"></include>
        from t_user
        <where>
                and is_deleted = 0
            <if test=" id != null ">
                and id = #{id}
            </if>
            <if test=" userName != null and userName != '' ">
                and user_name = #{userName}
            </if>
            <if test=" userNameLike != null and userNameLike != '' ">
                and user_name  like CONCAT('%' , #{userNameLike} , '%')
            </if>
        </where>
    </select>
    <select id="getOne" resultType="cn.hhfarcry.springbootmybatis.example.entity.UserEntity" parameterType="java.lang.Integer">
        select <include refid="allcolumn"></include> from t_user where is_deleted = 0 and id = #{0}
    </select>

    <delete id="deleteinbatch" parameterType="java.util.List">
        update  t_user set is_deleted = -1 where id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <insert id="insertByEntity" useGeneratedKeys="true" keyProperty="id" parameterType="cn.hhfarcry.springbootmybatis.example.entity.UserEntity">
        insert into t_user
        (is_deleted
        
        ,comment
        ,create_user_uuid
        ,create_time
        ,user_name
        ,password
        ,phone)
        values
        (#{isDeleted}
        ,#{comment}
        ,#{createUserId}
        ,#{createTime}
        ,#{userName}
        ,#{password}
        ,#{phone})
    </insert>

</mapper>