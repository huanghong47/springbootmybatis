<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.hhfarcry.springbootmybatis.example.dao.RoleDao">
    <sql id="allcolumn">
        id
        ,is_deleted
        ,status
        ,comment
        ,create_user_uuid
        ,create_time
        ,update_user_uuid
        ,update_time
        ,role_name
    </sql>

    <sql id="allcolumn2">
        #{id}
        ,#{isDeleted}
        ,#{status}
        ,#{comment}
        ,#{createUserUuid}
        ,#{createTime}
        ,#{updateUserUuid}
        ,#{updateTime}
        ,#{roleName}
    </sql>

    <select id="selectByEntity" resultType="cn.hhfarcry.springbootmybatis.example.entity.RoleEntity" parameterType="map">
        select <include refid="allcolumn"></include>
        from t_role
        <where>
            and is_deleted = 0
            <if test=" id != null  ">
                and id = #{id}
            </if>
            <if test=" status != null ">
                and status = #{status}
            </if>
            <if test=" roleName != null and roleName != '' ">
                and role_name = #{roleName}
            </if>
            <if test=" roleNameLike != null and roleNameLike != '' ">
                and role_name  like CONCAT('%' , #{roleNameLike} , '%')
            </if>
        </where>
    </select>

    <select id="getOne" resultType="cn.hhfarcry.springbootmybatis.example.entity.RoleEntity" parameterType="java.lang.Integer">
        select <include refid="allcolumn"></include>
        from t_role
        where id = #{0}
    </select>

    <insert id="insertOrUpdateByEntity" parameterType="cn.hhfarcry.springbootmybatis.example.entity.RoleEntity">
        insert into t_role
        (id
        ,is_deleted
        ,status
        ,comment
        ,create_user_uuid
        ,create_time
        ,role_name)
        values
        (#{id}
        ,#{isDeleted}
        ,#{status}
        ,#{comment}
        ,#{createUserUuid}
        ,#{createTime}
        ,#{roleName})
        on duplicate key update
        update_user_uuid = #{updateUserUuid}
        ,update_time = current_timestamp
        ,role_name = #{roleName}
    </insert>

    <select id="getRolesByUserId" parameterType="Integer" resultType="cn.hhfarcry.springbootmybatis.example.entity.RoleEntity">
        select
        role.id
        ,role.is_deleted
        ,role.status
        ,role.comment
        ,role.create_user_uuid
        ,role.create_time
        ,role.update_user_uuid
        ,role.update_time
        ,role.role_name
        from t_role role
        left join t_user_role ur
        on role.id = ur.role_id
        where ur.user_id = #{0}
    </select>

    <select id="getRolesByRoleids" resultType="cn.hhfarcry.springbootmybatis.example.entity.RoleEntity" parameterType="java.util.List">
        select <include refid="allcolumn"></include>
        from t_role
        where id in
        <foreach collection="list" item="id" separator="," open="(" close=")" index="i">
            #{id}
        </foreach>
    </select>
</mapper>