<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.hhfarcry.springbootmybatis.example.dao.RoleResourceDao">
    <sql id="allcolumn">
       id
       ,role_id
       ,resource_id
    </sql>

    <sql id="allcolumn2">
        #{id}
       ,#{roleId}
       ,#{resourceId}
    </sql>

    <select id="selectByEntity" resultType="cn.hhfarcry.springbootmybatis.example.entity.RoleResourceEntity" parameterType="map">
        select <include refid="allcolumn"></include>
        from t_role_resource
    </select>


    <insert id="insertRoleResource" useGeneratedKeys="true" keyProperty="id" parameterType="cn.hhfarcry.springbootmybatis.example.entity.RoleResourceEntity">
        insert into t_role_resource
        (id
       ,role_id
       ,resource_id)
        values
        ( #{id}
       ,#{roleId}
       ,#{resourceId})
    </insert>

    <insert id="insertRoleResources" parameterType="java.util.List">
        insert into
        t_role_resource
        (role_id
        ,resource_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId,jdbcType=INTEGER},#{item.resourceId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <delete id="deleteRoleResources">
        delete from t_role_resource where role_id = #{0}
    </delete>
</mapper>